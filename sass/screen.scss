@import url(http://fonts.googleapis.com/css?family=Roboto:100,300,700);

// @font-face {
//   font-family: "Roboto";
//   src: url('../fnt/roboto-light-webfont.eot'); /* IE9 Compat Modes */
//   src: url('../fnt/roboto-light-webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
//        url('../fnt/roboto-light-webfont.woff') format('woff'), /* Modern Browsers */
//        url('../fnt/roboto-light-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
//        url('../fnt/roboto-light-webfont.svg#Roboto') format('svg'); /* Legacy iOS */
// }

*, *:after, *:before {
	box-sizing: border-box;
}

.clearFix:after {
	content: "";
	display: table;
	clear: both;
}

// color values
$gray: #787878; // generic
$grayD: darken($gray, 25%); // dark
$grayL: lighten($gray, 35%); // light

$blueLight: #78ccfe;
$blue: #538ed9;
$blueMedium: #325a8d;
$blueDark: #323e50;

$divider : lighten($blueLight, 20%);

$shadowRegular: rgba(black, 0.25);
$shadowLight: rgba(black, 0.10);

// generic values
$ani: 0.25s;
$pad: 6em;
$icon: 2%;

@mixin breakpoint($point){

	@if $point == MICRO{
		@media only screen and (min-width: 23em){ @content;} // 370px
	}

	@if $point == SMALL{
		@media only screen and (min-width: 37.5em){ @content;} // 600px
	}

	@else if $point == MEDIUM{
		@media only screen and (min-width: 56.25em){ @content;} // 900px
	}

	@else if $point == LARGE{
		@media only screen and (min-width: 80em){@content;} // 1280px (more than 1200px so that there is a slight amount of padding when the .center width becomes static at 1200px)
	}

}

@mixin vendorize($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin pseudo{
	content: "";
	display: block;
	position: absolute;
}

@mixin keyframes($aniName){

    @-webkit-keyframes $aniName{
        @content;
    }
    @-moz-keyframes $aniName{
        @content;
    }
    @-o-keyframes $aniName{
        @content;
    }
    @keyframes $aniName{
        @content;
    }
}



/*
	 _                   __            _   
	(_) __  ___  _ _    / _| ___  _ _ | |_ 
	| |/ _|/ _ \| ' \  |  _|/ _ \| ' \|  _|
	|_|\__|\___/|_||_| |_|  \___/|_||_|\__|

*/

@font-face {
	font-family: 'icomoon';
	src:url('../fnt/icomoon.eot?-npddoi');
	src:url('../fnt/icomoon.eot?#iefix-npddoi') format('embedded-opentype'),
		url('../fnt/icomoon.woff?-npddoi') format('woff'),
		url('../fnt/icomoon.ttf?-npddoi') format('truetype'),
		url('../fnt/icomoon.svg?-npddoi#icomoon') format('svg');
	font-weight: normal;
	font-style: normal;
}

@mixin iconFont{
	display: block;
	font-family: 'icomoon';
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	line-height: 1;
	position: absolute;
	speak: none;
	text-transform: none;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.title{
	color: $blueDark;
	position: relative;

	.icon, h2{
		display: inline-block;
	}

	.icon{
		$width: $pad / 4;
		height: $width;
		position: relative;
		width: $width + 1.75em;
	}

	.icon:before{
		@include iconFont;
		font-size: 2.75em;
		left: 0;
		top: -0.2em;
	}
}

#about .intro{

	&.design .title .icon:before{ content: "\e600"; }
	&.development .title .icon:before{ content: "\e601"; }
	&.experience .title .icon:before{ content: "\e602"; }
	&.employment .title .icon:before{ content: "\e603"; }
}

#work{

	.intro .title .icon:before{ content: "\e604"; }

	// WORK ICONS....
}

#myHistory{
	.intro .title .icon:before{ content: "\e605"; }
}

#details{

	.intro{
		&.contact .title .icon:before{ content: "\e606"; }
		&.references .title .icon:before{ content: "\e607"; }
	}

	.phone .icon{
		&.dormant:before{ content: "\e60f"; }
		&.active:before{ content: "\e610"; }
	}

	.email .icon{
		&.dormant:before{ content: "\e611"; }
		&.active:before{ content: "\e612"; }
	}
}

#lightbox{

	.close .icon{
		
		&.dormant:before{ content: "\e606"; }
		&.active:before{ content: "\e606"; }
	}

	.previous{
		
		// *** icon fonts...
		// .dormant{ background-position: ($icon * 37) 0; }
		// .active{ background-position: ($icon * 38) 0; }
	}

	.next{
		
		// *** icon fonts...
		// .dormant{ background-position: ($icon * 39) 0; }
		// .active{ background-position: ($icon * 40) 0; }
	}

	.icon-container{

		.icon{
			
			&:before{
				content: "\e612" !important;
			}
		}
	}
}

.icon-icon-view:before {
	content: "\e608";
}
.icon-icon-previous-dormant:before {
	content: "\e609";
}
.icon-icon-previous-active:before {
	content: "\e60a";
}
.icon-icon-next-dormant:before {
	content: "\e60b";
}
.icon-icon-next-active:before {
	content: "\e60c";
}
.icon-icon-close-dormant:before {
	content: "\e60d";
}
.icon-icon-close-active:before {
	content: "\e60e";
}

/*
	              _       
	 _ __   __ _ (_) _ _  
	| '  \ / _` || || ' \ 
	|_|_|_|\__,_||_||_||_|

*/

html, body{
	height: 100%; // is this messing up the vertical scrolling on some devices?
	width: 100%;
}

body{
	color: $blue;
	font: {
		family: "Roboto", sans-serif;
		weight: 300;
	}
}

h1, .h1{
	font: {
		color: white;
		size: 3.5em;
		weight: 100;
	}
	margin: 0;

	@include breakpoint(SMALL){
		font-size: 5em;
	}

	@include breakpoint(MEDIUM){
		font-size: 7em;
	}
}

h2, .h2{
	$width: $pad / 4;
	font: {
		size: 2em;
		weight: 100;
	}
	margin: 0;
	// padding: 0 0 0 ($width + 0.5em);
	padding: 0;
	position: relative;

	/*&:before{
		@include pseudo;
		@include iconFont;
		// background-color: rgba(gray, 0.2);
		font-size: 1.5em;
		// height: $width;
		// left: 0;
		// padding-top: 0.25em;
		// top: 50%;
		// transform: translateY(-50%);
		// width: $width;
	}

	&.close, &.next{
		padding: 0 ($width + 0.5em) 0 0;

		&:before{
			left: auto;
			right: 0
		}
	}*/
}

h3, .h3{
	color: $blueDark;
	font: {
		size: 1.5em;
		style: normal; // fixes the italx from the <address>
		weight: 100;
	}
	margin: 0;
}

h4, .h4{
	font: {
		size: 2em;
		weight: 100;
	}
	margin: 0;
}

.center{
	list-style-type: none;
	margin: 0 auto;
	padding: 0 5%;
	width: 100%;

	@include breakpoint(LARGE){
		padding: 0;
		width: 75em; // 1200px
	}
}

.oneWord{
	white-space: nowrap;
}

/*
	     _              _                  
	 ___| |_   __ _  __| | ___ __ __ __ ___
	(_-<| ' \ / _` |/ _` |/ _ \\ V  V /(_-<
	/__/|_||_|\__,_|\__,_|\___/ \_/\_/ /__/
	                                       
*/

// create the shadow modules
// both shadows are the same apart from their pseudo element locations
.shadowTop, .shadowBottom{
	height: $pad / 2;
	left: 0;
	overflow: hidden; // hides the pseudo element and only shows the box-shadow
	position: absolute;
	width: 100%;

	&:before{
		@include pseudo;
		border-radius: 50%;
		box-shadow: 0px 0px 30px 0px $shadowRegular;
		height: 100%;
		left: 0;
		width: 100%;
	}
}

.shadowTop:before{
	top: 100%; // push the pesudo element under the mask
}

.shadowBottom:before{
	bottom: 100%; // push the pesudo element above the mask
}

// position the shadows...
section, .shadowContainer{
	position: relative; // make these the anchor for the shadows to be positioned around
}

#work, #myHistory{

	& > .shadowBottom{
		top: 0;
	}
}

#about, #work{

	.shadowTop{
		bottom: 100%;
	}
}

#lightBox{

	.shadowTop{
		bottom: 0;	
	}

	.shadowBottom{
		top: 0;
	}
}

#work, #myHistory, #details{

	.shadowContainer .shadowTop{
		bottom: 100%;

		&:before{
			box-shadow: 0px 0px 20px 0px $shadowLight;
		}
	}
}

/*
	                 _               _  _   
	 _ __  ___  _ _ | |_  _ _  __ _ (_)| |_ 
	| '_ \/ _ \| '_||  _|| '_|/ _` || ||  _|
	| .__/\___/|_|   \__||_|  \__,_||_| \__|
	|_|                                     

*/

// portrait image blendng through two different modules (header & about)
// hands grabbing onto and overlaying the divider

$portraitHeightTiny: 40em; 
$portraitHeightSmall: 50em; 
$portraitHeightMedium: 70em; 
$portraitHeightLarge: 80em;

$bodytoHandsRatio: 0.125; // the relation between the portrait body and hands svg image heights

#portraitBody, #portraitHands{
	left: 0%;
	position: absolute;
	transform: translateX(0);
	width: auto;

	@include breakpoint(MICRO){
		left: 15%;
		transform: translateX(0);
	}

	@include breakpoint(SMALL){
		left: 25%;
		transform: translateX(0);
	}

	@include breakpoint(MEDIUM){
		left: 50%;
		transform: translateX(-50%);
	}
}

#portraitBody{
	height: $portraitHeightTiny;
	top: 0;

	@include breakpoint(SMALL){ height: $portraitHeightSmall; }
	@include breakpoint(MEDIUM){ height: $portraitHeightMedium; }
	@include breakpoint(LARGE){ height: $portraitHeightLarge; }
}

#portraitHands{
	height: $portraitHeightTiny * $bodytoHandsRatio;
	top: $portraitHeightTiny * $bodytoHandsRatio * -0.5;

	@include breakpoint(SMALL){
		height: $portraitHeightSmall * $bodytoHandsRatio;
		top: $portraitHeightSmall * $bodytoHandsRatio * -0.5;
	}
	@include breakpoint(MEDIUM){
		height: $portraitHeightMedium * $bodytoHandsRatio;
		top: $portraitHeightMedium * $bodytoHandsRatio * -0.5;
	}
	@include breakpoint(LARGE){
		height: $portraitHeightLarge * $bodytoHandsRatio;
		top: $portraitHeightLarge * $bodytoHandsRatio * -0.5;
	}
}

/*
           _                  _          _   _               _                                   _ 
 ___ __ __| |_  ___  _ _   __| | ___  __| | | |__  __ _  __ | |__ __ _  _ _  ___  _  _  _ _   __| |
/ -_)\ \ /|  _|/ -_)| ' \ / _` |/ -_)/ _` | | '_ \/ _` |/ _|| / // _` || '_|/ _ \| || || ' \ / _` |
\___|/_\_\ \__|\___||_||_|\__,_|\___|\__,_| |_.__/\__,_|\__||_\_\\__, ||_|  \___/ \_,_||_||_|\__,_|
                                                                 |___/                                                                
	
*/

.extendedBg{
	background-color: $blueLight;
	overflow-x: hidden;
	position: relative; // for portraitBody image to reference
	z-index: -1; // push below all other content (moves light rays to the back also)

	&:before, &:after{
		@include pseudo;
		background:{
			repeat: no-repeat;
			size: 400%;
		}
		height: 100%;
		opacity: 0.5;
		top: 0;
		width: 100%;
		z-index: -100; // move light rays under other DOM content

		@include breakpoint(MICRO){ background-size: 300%; }
		@include breakpoint(SMALL){ background-size: 150%; }

		@include breakpoint(MEDIUM){
			background-size: 100%;
			opacity: 0.75;
			
		}

		@include breakpoint(LARGE){ opacity: 1; }
	}

	&:before{
		background: {
			image: url(../img/dark-rays.svg);
			position: left top;
		}
		left: 0;
	}

	&:after{
		background: {
			image: url(../img/light-rays.svg);
			position: right top;
		}
		right: 0;
	}
}

header{
	height: $portraitHeightTiny / 2;
	position: relative; // for hello copy to reference

	@include breakpoint(SMALL){ height: $portraitHeightSmall / 2; }
	@include breakpoint(MEDIUM){ height: $portraitHeightMedium / 2; }
	@include breakpoint(LARGE){ height: $portraitHeightLarge / 2; }

	.hello{
		position: absolute;
		top: $pad / 3;
		transform: translateY(0);
		width: 45%;

		@include breakpoint(MICRO){
			top: 50%;
			transform: translateY(-50%);
			width: 40%;
		}

		@include breakpoint(SMALL){ width: 40%; }

		@include breakpoint(MEDIUM){ width: 33%; }

		h1{
			color: white;
		}

		p{
			color: $blueDark;
			font: {
				size: 1em;
				weight: 300;
			}
			margin: 0;

			@include breakpoint(SMALL){
				font: {
					size: 1.5em;
					weight: 100;
				}
			}
		}
	}
}

/*
	       _                _   
	 __ _ | |__  ___  _  _ | |_ 
	/ _` || '_ \/ _ \| || ||  _|
	\__,_||_.__/\___/ \_,_| \__|
                            
*/

#about{
	background-image: linear-gradient(to bottom, rgba(white, 0.5), rgba(white, 0.8));

	// *** icon fonts...
}

#about, #details{
	padding: $pad 0 ($pad / 2) 0;

	.intro{
		padding: 0 0 ($pad / 2) 0;

		@include breakpoint(MEDIUM){
			&:nth-child(odd){
				padding-right: $pad / 2;
			}
			&:nth-child(even){
				padding-left: $pad / 2;
			}
			float: left;
			width: 50%;
		}
	}
}

/*
	                   _   
	__ __ __ ___  _ _ | |__
	\ V  V // _ \| '_|| / /
	 \_/\_/ \___/|_|  |_\_\

*/

#work, #myHistory{
	padding: $pad 0 0 0;

	.intro{
		padding-bottom: $pad / 2;
	}
}

.spacer{
	height: auto;
	width: 100%;
}

.thumbList{
	list-style-type: none;
	// overflow-x: hidden; // stops the 2d scale adding more than 100% width to the broswer during animation
	padding: 0;
	position: relative;

	.thumbSquare{
		float: left;
	}
}

.thumbSquare{
	cursor: pointer;
	position: relative;

	&:before{
		@include pseudo;
		background: $divider;
		height: 100%;
		right: 0;
		top: 50%;
		width: 2px;
		z-index: 1;
	}

	&:after{
		@include pseudo;
		background: $divider;
		bottom: 0;
		height: 2px;
		left: 50%;
		width: 100%;
		z-index: 1;
	}
}

@mixin thumbReset(){

	&:nth-child(1n+1):before{ // reset all thumbnail vertical lines to visible
		display: block;
	}

	&:nth-child(1n+1):after{ // reset all thumbnail horizontal lines to visible
		display: block;
		left: 50%; // set the position to emulate every media query other than the smallest mobile layout
		width: 100%; // set the width to emulate every media query other than the smallest mobile layout
	}

	&:nth-child(1n+1){ // reset all thumbnails to visible
		display: block;
	}
}

#work{

	// *** icon fonts...

	li{
		$gap: 1em;
		height: 10em;
		width: 100%;

		&.thumbSquare{
			color: $blueDark;

			.description, .icon{
				left: 0;
				position: absolute;
				text-align: center;
				top: 0;
				width: 100%;
			}

			.description{
				height: 40%;
				top: 60%;

				span{
					border-top: 1px solid black;
					padding-top: $gap;
				}
			}

			.icon{
				height: 60%;
				top: 0;

				&:after{
					@include iconFont;
					bottom: 0;
					content: "\e613";
					font-size: 8em;
					left: 0;
					// top: 0;
					width: 100%;
					// margin: -0.5em 0 0 -0.5em;
					// top: 50%;
					// transform: translate(-50%, -50%);
				}
			}
		}

		&:before{ // get rid of the vertical lines on each right hand side at the end of each row
			display: none;
		}

		&:after{ // get rid of the horizontal lines on the last row
			left: 25%;
			width: 50%;
		}

		&:nth-child(12):after{ // get rid of the last horizontal line at the end of each row
			display: none;
		}

		@include breakpoint(MICRO){
			height: 100%;
			width: 50%;

			@include thumbReset;

			&:nth-child(2n+2):before{ // get rid of the vertical lines on each right hand side at the end of each row
				display: none;
			}

			&:nth-child(1n+11):before{ // get rid of the vertical lines on the last row
				display: none;
			}

			&:nth-child(1n+11):after{ // get rid of the horizontal lines on the last row
				display: none;
			}

			&:nth-child(2n+2):after{ // get rid of the last horizontal line at the end of each row
				display: none;
			}
		}

		@include breakpoint(SMALL){
			width: 33%;

			@include thumbReset;

			&:nth-child(3n+3):before{ // get rid of the vertical lines on each right hand side at the end of each row
				display: none;
			}

			&:nth-child(1n+9):before{ // get rid of the vertical lines on the last row
				display: none;
			}

			&:nth-child(1n+9):after{ // get rid of the horizontal lines on the last row
				display: none;
			}

			&:nth-child(3n+3):after{ // get rid of the last horizontal line at the end of each row
				display: none;
			}
		}

		@include breakpoint(MEDIUM){
			width: 25%;

			@include thumbReset;

			&:nth-child(4n+4):before{ // get rid of the vertical lines on each right hand side at the end of each row
				display: none;
			}

			&:nth-child(1n+9):before{ // get rid of the vertical lines on the last row
				display: none;
			}

			&:nth-child(1n+9):after{ // get rid of the horizontal lines on the last row
				display: none;
			}

			&:nth-child(4n+4):after{ // get rid of the last horizontal line at the end of each row
				display: none;
			}
		}
	}
}

/*
	 _     _      _                   
	| |_  (_) ___| |_  ___  _ _  _  _ 
	| ' \ | |(_-<|  _|/ _ \| '_|| || |
	|_||_||_|/__/ \__|\___/|_|   \_, |
	                             |__/ 

*/

#myHistory{
	background-image: linear-gradient(to top, rgba(white, 0.25), rgba(white, 0.8));
	padding: $pad 0 0 0;

	// *** icon fonts...
}

.jobList{
	$dot: 15px; // the width of the timeline start and end "dot"
	$stroke: 1px; // the width of the timeline
	list-style-type: none;
	padding-top: $pad;
	padding-bottom: $pad / 2;

	// colors...
	.bma{
		
		&:after{
			background-color: #cbecff;
		}

		& .timeline:before, & .timeline:after{
			background-color: #d2edfe;
		}
	}

	.nzpc{
		
		&:after{
			background-color: #c5e9ff;
		}	

		& .timeline:before, & .timeline:after{
			background-color: #d2edfe;
		}
	}

	.freelance{
		
		&:after{
			background-color: #bde6ff;
		}

		& .timeline:before, & .timeline:after{
			background-color: #c6e9ff;
		}
	}

	.fairfax{
		
		&:after{
			background-color: #b6e3fe;
		}

		& .timeline:before, & .timeline:after{
			background-color: #bde6ff;
		}
	}

	.seniorPosition{
		
		&:after{
			background-color: #afe1fe;
		}

		& .timeline:before, & .timeline:after{
			background-color: #b5e3fe;
		}
	}

	.productDevelopment{
		
		&:after{
			background-color: #a8defe;
		}

		& .timeline:before, & .timeline:after{
			background-color: #ace0fe;
		}
	}

	.digitalSpecialist{
		
		&:after{
			background-color: #a1dcfe;
		}

		& .timeline:before, & .timeline:after{
			background-color: #a3dcfe;
		}
	}

	@mixin dotBase{
		@include pseudo;
		// background-color: $color; // colour is set through the class system above
		border: $stroke solid $blueLight;
		border-radius: 50%;
		height: $dot - ($stroke * 2);
		right: - ($dot / 2) + $stroke;
		width: $dot - ($stroke * 2);
	}

	.jobPosition{
		padding: 0 0 ($pad / 2) ($pad / 2);
		position: relative;

		&:before{
			@include pseudo;
			background-color: $blueLight;
			height: 120%;
			left: ($dot / 2) - $stroke;
			top: -40%;
			width: $stroke;
		}

		&:after{
			@include dotBase;
			left: 0;
			top: 0.5em; // pull inline with header text
		}

		@include breakpoint(SMALL){
			float: left;
			padding: 0 0 ($pad / 2) 0;
			position: relative;

			&:before, &:after{
				display: none;
			}
		}

		&.bma{

			&:before{
				background: {
					image: linear-gradient(to top, $blueLight, rgba($blueLight, 0));
					color: transparent;
				}
			}

			@include breakpoint(SMALL){
				padding-right: $pad / 2;
				text-align: right;
				width: 50%;

				.timeline.middle{
					background: {
						image: linear-gradient(to top, $blueLight, rgba($blueLight, 0));
						color: transparent;
					}
					height: $pad;
					right: 0;
					top: - $pad + 1.4em; // pull inline with header text
				}
			}
		}

		&.nzpc{

			@include breakpoint(SMALL){
				padding-left: $pad;
				width: 50%;

				.timeline.right{
					left: $pad / 2;
				}
			}
		}

		&.freelance{

			@include breakpoint(SMALL){
				margin-right: 50%;
				padding-right: $pad / 2;
				text-align: right;
				width: 50%;

				.timeline.middle{
					right: 0;
				}

				.timeline.right{
					left: 100%;
					margin-left: $pad / 2;
				}
			}
		}

		&.fairfax{

			@include breakpoint(SMALL){
				padding-right: $pad;
				text-align: right;
				width: 50%;

				.timeline.left{
					right: $pad / 2;
				}

				.timeline.middle{
					height: 0; // just show the ending "dot" no line
					right: 0;
				}

				.timeline.right{
					height: 0; // just show the ending "dot" no line
					left: 100%;
					margin-left: $pad / 2;
				}
			}
		}

		&.digitalSpecialist{

			&:before{
				background: {
					image: linear-gradient(to bottom, $blueLight, rgba($blueLight, 0));
					color: transparent;
				}
			}

			@include breakpoint(SMALL){
				.timeline.left{
					background: {
						color: transparent;
						image: linear-gradient(to bottom, $blueLight, rgba($blueLight, 0));
					}
					height: $pad; // just show the ending "dot" no line
					padding-bottom: 0.5em;
				}
			}
		}

		&.seniorPosition, &.productDevelopment, &.digitalSpecialist{
			padding-left: $pad;

			&:after{
				left: $pad / 2;
			}

			h3:before{
				@include pseudo;
				background-color: $blueLight;
				height: $stroke;
				left: ($dot / 2) - $stroke;
				top: 0.55em;
				width: $pad / 3;
			}

			@include breakpoint(SMALL){
				margin-left: 50%;
				padding-left: $pad / 2;
				width: 50%;

				h3:before{
					display: none;
				}

				.timeline.left{
					margin-right: $pad / 2;
					right: 100%;
				}

				.timeline.horizontal{
					height: $stroke;
					right: 100%;
					top: 1em; // pull inline with header text
					width: $pad / 2;

					&.end:after{
						right: 0;
						bottom: - ($dot / 2) + $stroke;
					}
				}
			}
		}
	}

	.timeline{
		display: none; // hide the dynamic timeline

		@include breakpoint(SMALL){
			background-color: $blueLight;
			display: block; // show the dynamic timeline
			position: absolute;
			top: 0;
			width: $stroke;

			&.left, &.middle, &.right{
				height: 100%;
				padding-bottom: 1em; // pull end "dot" inline with start "dot"
				top: 0.5em; // pull inline with header text
			}

			&.start:before, &.end:after{
				@include dotBase;
			}

			&.start:before{
				top: 0;
			}

			&.end:after{
				bottom: 0;
			}
		}
	}
}

/*
	    _       _          _  _     
	 __| | ___ | |_  __ _ (_)| | ___
	/ _` |/ -_)|  _|/ _` || || |(_-<
	\__,_|\___| \__|\__,_||_||_|/__/

*/

#details{
	color: $blueDark;

	&:before{
		background-position: left center;
	}

	&:after{
		background-position: right center;
	}	

	.title{
		color: white;
	}

	// *** icon fonts...

	address ul li{
		$width: 5em;
		color: $blueDark;
		display: block;
		float: left;
		padding-top: $width + 1.5em;
		position: relative;
		width: 100%;

		//change the icons to be left aligned when stacked on top of one another
		@include breakpoint(SMALL){
			display: inline;
			width: auto;
		}

		a{
			color: inherit;
			text-decoration: none;

			.icon-container{
				position: absolute;
				height: $width;
				top: 1.5em;

				.icon{
					// @include pseudo;
					position: absolute;
					height: $width;
					left: 0;
					top: 0;
					width: $width;

					&.active, &.dormant{
						
						&:before{
							@include iconFont;
							color: white;
							font-size: 5em;
							height: 100%;
							left: 0;
							top: 0;
							width: 100%;
						}
					}

					&.active{
						visibility: hidden;
					}
				}
			}
		}

		&.phone a{
			margin-right: $pad / 2;

			.icon-container{
				@include breakpoint(SMALL){ left: 0.5em }
			}

			// *** icon fonts...
		}

		&.email a{

			.icon-container{
				@include breakpoint(SMALL){ left: 1.75em }
			}

			// *** icon fonts...
		}
	}
}

/*
	 _  _        _    _     _              
	| |(_) __ _ | |_ | |_  | |__  ___ __ __
	| || |/ _` || ' \|  _| | '_ \/ _ \\ \ /
	|_||_|\__, ||_||_|\__| |_.__/\___//_\_\
	      |___/                            

*/

#lightBox{
	$width: $pad / 4;
	$grad: lighten($blueLight, 20%);
	display: none;
	height: 100%;
	left: 0;
	position: fixed;
	top: 0;
	width: 100%;
	z-index: 9999;

	.top-ui{
		background-image: linear-gradient(to top, rgba($grad, 1), rgba($grad, 0.6));
		top: 0;
	}

	.bottom-ui{
		background-image: linear-gradient(to bottom, rgba($grad, 1), rgba($grad, 0.6));
		bottom: 0;
	}

	.top-ui, .bottom-ui{
		height: $pad / 1.5;
		left: 0;
		position: absolute;
		width: 100%;
		z-index: 1;

		@include breakpoint(MEDIUM){ height: $pad / 1.25; }
		@include breakpoint(LARGE){ height: $pad; }

		.center{
			height: 100%;
			position: relative;
		}

		.close, .previous, .next, .projectCurrent{
			color: $blueDark;
			position: absolute;
			top: 50%;
			transform: translateY(-50%);

			.text{
				font-size: 1.5em;
				visibility: hidden;

				@include breakpoint(SMALL){  visibility: inherit; }
				@include breakpoint(MEDIUM){ font-size: 1.7em; }
				@include breakpoint(LARGE){ font-size: 2em; }
			}

			.icon:before{
				font-size: 2.2em;

				@include breakpoint(MEDIUM){ font-size: 2.4em; }
				@include breakpoint(LARGE){ font-size: 2.75em; }
			}
		}

		.projectCurrent{
			font-size: 1.5em;
			left: 0;
			text-align: center;
			width: 100%;
			z-index: 0;

			@include breakpoint(MEDIUM){ font-size: 1.7em; }
			@include breakpoint(LARGE){ font-size: 2em; }

			.dynamic{
				display: inline-block;
				position: relative;
			}
		}

		.previous, .next{
			z-index: 1; // layer ontop of the .projectCurrent content
		}

		.close, .next{
			right: $pad / 4;

			.text{ margin-right: $pad / 2.75; }
			.icon-container{
				right: 0;

				.icon:before{
					right: 0;
				}
			}
		}

		.previous{
			left: $pad / 4;

			.text{ margin-left: $pad / 3; }
			.icon-container{
				left: 0;

				.icon:before{
					left: 0;
				}
			}
		}

		a{
			text-decoration: none;
		}

		.icon-container{
			height: 100%;
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			width: 3em;

			.icon{
				height: 100%;
				position: absolute;
				width: 100%;

				&.active{ visibility: hidden; }

				&:before{
					@include iconFont;
					text-align: center;
					top: 0;
				}
			}
		}

		.close .icon{

			&.dormant:before{ content: "\e60d"; }
			&.active:before{ content: "\e60e"; }
		}

		.previous .icon{

			&.dormant:before{ content: "\e609"; }
			&.active:before{ content: "\e60a"; }	
		}

		.next .icon{

			&.dormant:before{ content: "\e60b"; }
			&.active:before{ content: "\e60c"; }
		}
	}

	.content{
		background-color: white;
		bottom: $pad / 1.5;
		position: absolute;
		top: $pad / 1.5;
		width: 100%;

		@include breakpoint(MEDIUM){
			bottom: $pad / 1.25;
			top: $pad / 1.25;
		}

		@include breakpoint(LARGE){
			bottom: $pad;
			top: $pad;
		}

		li{
			background: {
				position: center center;
				repeat: no-repeat;
				size: contain;
			}
			bottom: $pad / 4;
			left: $pad / 4;
			position: absolute;
			right: $pad / 4;
			top: $pad / 4;
		}

		&[data-projectName="neilsenSurvey"]{

			li[data-projectCurrent="0"]{
				background-image: url(../img/neilsen-frame1-micro.jpg);
				@include breakpoint(LARGE){ background-image: url(../img/neilsen-frame1-large.jpg); }
			}
		}
	}
}

/*
	                _                  _          
	 _ __   ___  __| | ___  _ _  _ _  (_) ___ _ _ 
	| '  \ / _ \/ _` |/ -_)| '_|| ' \ | ||_ /| '_|
	|_|_|_|\___/\__,_|\___||_|  |_||_||_|/__||_|  

*/

.no-js{

}

.no-borderradius{

	#myHistory .jobPosition{
		$dot: 15px; // the width of the timeline start and end "dot"

		&:after{
			background: {
				color: transparent;
				image: url(../img/history-dot.png);
				position: center center;
				repeat: no-repeat;
			}
			border: 0;
			height: $dot;
			right: - ($dot / 2);
			width: $dot;
		}
	}
}

.no-backgroundsize{

}

.no-boxshadow{

	.shadowTop, .shadowBottom{
		background: {
			position: center center;
			repeat: no-repeat;
		}

		&:before{
			display: none;
		}
	}

	.shadowTop{
		background-image: url(../img/no-boxshadow-top.png);
	}

	.shadowBottom{
		background-image: url(../img/no-boxshadow-bottom.png);
	}
}

.no-opacity{

}

.no-cssgradients{

	#about, #myHistory{
		background-color: rgba(white, 0.7);
	}

	.jobList .jobPosition{

		&.bma, &.digitalSpecialist{

			&:before{
				background-color: $blueLight;
			}

			@include breakpoint(SMALL){

				.timeline.middle, .timeline.left{
					background-color: $blueLight;
				}
			}
		}

		&:after{
			background-color: #d6f0ff;
		}

		& .timeline:before, & .timeline:after{
			background-color: #d6f0ff;
		}
	}
}

.no-rgba{

	#about, #myHistory{
		background-image: url(../img/white-50percent-tile.png);
	}

	#lightBox{

		.top-ui, .bottom-ui{
			background-image: url(../img/white-80percent-tile.png);
		}
	}
}

.no-mediaquery{ // reset everything to its largest STATIC state

	h1{
		font-size: 7em;
	}

	$portraitHeightLargeStatic: 1280px;
	header{
		height: $portraitHeightLargeStatic / 2;

		.hello{
			top: 50%;
			transform: translateY(-50%);
			width: 33%;

			h1{
				color: white;
			}

			p{
				font: {
					size: 1.5em;
					weight: 100;
				}
			}
		}
	}

	#portraitBody{
		height: 1280px;
		left: 50%;
		margin-left: -350px;
		transform: translateX(0);
		width: 973px;
	}

	#portraitHands{
		height: $portraitHeightLargeStatic * $bodytoHandsRatio;
		top: $portraitHeightLargeStatic * $bodytoHandsRatio * -0.5;
		left: 50%;
		margin-left: -350px;
		transform: translateX(0);
		width: 973px;
	}

	.center{
		width: 75em; // 1200px
	}

	#about, #details{

		.intro{
			float: left;
			width: 50%;

			&.design, &.experience, &.contact{
				padding-right: $pad / 2;
			}

			&.development, &.employment, &.references{
				padding-left: $pad / 2;
			}
		}
	}

	#work li{
		width: 25%;

		.icon:after{
			left: 50%;
			margin: -0.5em 0 0 -0.5em;
			top: 50%
		}
	}

	#details address ul li{
		display: inline;
		width: auto;

		&.phone a .icon-container{
			left: 0.5em
		}

		&.email a .icon-container{
			left: 1.75em
		}
	}

	#lightBox{

		.top-ui, .bottom-ui{
			height: $pad;

			.center{
				height: 100%;
				position: relative;
			}

			.close, .previous, .next, .projectCurrent{
				top: 25px;

				.text{
					font-size: 2em;
					visibility: inherit;
				}

				.icon:before{
					font-size: 2.75em;
					top: -20px;
				}
			}

			.projectCurrent{
				font-size: 2em;
			}
		}

		.content{
			bottom: $pad;
			top: $pad;

			li{
				bottom: 0;
				left: 0;
				right: 0;
				top: 0;
			}
		}
	}
}

.no-csstransforms{

}

.no-svg{

	/* #portraitBody, #portraitHands{

		// this is taken care of via javascript / modernizer
	
	}*/

}

.lt-ie9{

	// this fixes the icon font rendering issue in IE8 where sometime the font will not load
	// the fix is to add an extra class to any icon font in the DOM that overides the "content" CSS stribute
	// then remove this class on document.ready via javascript to update the icon font reference correctly
	.ie8:before{
		content: "" !important;
	}
}







